buildscript {
    ext {
        springBootVersion = '1.2.0.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
//apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'

jar {
    baseName = 'sepe'
    version = '1.7.0-SNAPSHOT'
}


sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
    providedRuntime
}


configurations.all {
    resolutionStrategy.cacheChangingModulesFor 360, 'seconds'
    resolutionStrategy.cacheDynamicVersionsFor 360, 'seconds'
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-undertow")
    compile("org.javassist:javassist:3.18.2-GA")
    compile("javax.mail:mail:1.4.3")
    compile("org.codehaus.jackson:jackson-core-asl:1.1.0")

    compile("commons-io:commons-io:+")
    compile("com.google.code.findbugs:jsr305:3.0.0")
    compile fileTree(dir: "$projectDir/lib", include: '*.jar')
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}

/*eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}*/

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}
